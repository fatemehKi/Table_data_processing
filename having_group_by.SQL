USE day2
SELECT * FROM STAFF

/*FINDING MAXIMUM SALARY*/
SELECT MAX(salary) AS MAX_SALARY
FROM STAFF

/*MULTIPLE AGGREGATE FUNCTIONS IN A LINE FOR ONE TABLE*/
SELECT COUNT(*) AS NUMBER_OF_EMPLOYEE, MAX(salary) AS MAX_SALARY, MIN(salary) AS MIN_SALARY, SUM(SALARY) AS TOTAL_SALARY, AVG(SALARY) AS AV_SALARY
FROM STAFF

/*FINGING THE STATISTIC IN A GROUP*/
SELECT AVG(SALARY) AS AVE_SALARY 
FROM STAFF 
GROUP BY position
/*SHOWING THE GROUP NAME FOR EACH*/
SELECT POSITION, AVG(SALARY) AS AVE_SALARY 
FROM STAFF
GROUP BY position 

/*SHOWING AVERAGE SALARY ONLY FOR ONE GROUP.. FILTERED AT THE END*/
SELECT POSITION, AVG(SALARY) AS AVE_SALARY 
FROM STAFF
GROUP BY position
HAVING position = 'MANAGER'

/* IF WE WANT TO FILTER AND THEN GROUPING.. THEREFORE, FASTER BUT NOT LLOWED TO HAVE AGGREGATE*/
SELECT POSITION, AVG(SALARY) AS AVE_SALARY 
FROM STAFF
WHERE position = 'MANAGER'
GROUP BY position

/* IF WE WANT TO HAVE AN AGGREGATE FUNCTION, IT IS BETTER TO USE THE HAVING CLASUE.. CAN NOT BE USED IN WHERE.. FINDING AVERAGE SALARY OF THE GROUP THAT HAVE THE GROUP BIGGER THAN TWO MEMBER*/
SELECT POSITION, AVG(SALARY) AS AVE_SALARY 
FROM STAFF
GROUP BY position
HAVING COUNT(*)>2
/*********************************WHERE COMES BEFORE GROUP BY AND HAVING COMES AFTER GROUP BY*************/

/* ORDERING THE RESULT */
SELECT POSITION, AVG(SALARY) AS AVE_SALARY_BY_POSITION
FROM STAFF
GROUP BY position
HAVING COUNT(*) >1
ORDER BY AVE_SALARY_BY_POSITION DESC
